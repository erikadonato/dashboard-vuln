import { Table, Tbody, Td, Th, Tr, Thead} from './styles'
import moment from 'moment'
import { useEffect, useState } from 'react'
import ClipLoader from "react-spinners/ClipLoader";
import api from '../../services/api';
import Pagination from '../Pagination';

const VulnerabilityTable = () => {

    const [data, setData] = useState([])
    const [tableHeaders, setTableHeaders] = useState([])
    const [currentPage, setCurrentPage] = useState(1);
    const [postsPerPage] = useState(50);
    const [sizeOfData, setSizeOfData] = useState()

    // Get current posts
    const indexOfLastPost = currentPage * postsPerPage;
    const indexOfFirstPost = indexOfLastPost - postsPerPage;
    const currentPosts = data.slice(indexOfFirstPost, indexOfLastPost);

     // Change page
    const paginate = (pageNumber) => setCurrentPage(pageNumber);

    function checkSeverity(severity) {
        if(severity === 'MÃ©dio') {
            return <Td style={{background: '#326da8', color: 'white'}}>{severity}</Td>
        } else if(severity === 'Alto'){
            return <Td style={{background: '#c97826'}}>{severity}</Td>
        } else {
            return <Td style={{background: '#e31919'}}>{severity}</Td>
        }
    }

    useEffect(() => {
    api.get('http://201.49.62.134:8080/api/vulnerabilities/').then(response => {
        setSizeOfData(response.data.count)
        setData(response.data.results)
        setTableHeaders(Object.keys(response.data.results[0]))
    })}, [])

    return (
        <div>
            {data.lenght === 0 ? <ClipLoader color={'#FFF'} loading={true} size={35} />
            :
            <div>
                <Table>
                <Thead>
                    <Tr>
                        {tableHeaders.map((header, index) => {
                            return (
                                <Th key={index}>{header}</Th>
                            )
                        })}   
                    </Tr>
                </Thead>
                <Tbody>
                    {data.map((data, index) => {
                        return (
                            <Tr key={index}>
                                <Td>{data.id}</Td>
                                <Td>{data.title}</Td>
                                {checkSeverity(data.severity)}
                                <Td>{data.cvss}</Td>
                                <Td>{moment(data.publication_date).format('DD/MM/YYYY h:mm:ss')}</Td>
                                <Td>{data.asset_count}</Td>
                            </Tr>
                            )
                        })}
                </Tbody>
                </Table>    
            <Pagination
                postsPerPage={postsPerPage}
                totalPosts={sizeOfData}
                paginate={paginate} 
            />
        </div>
            }    
        </div>
    )

} 
export default VulnerabilityTable